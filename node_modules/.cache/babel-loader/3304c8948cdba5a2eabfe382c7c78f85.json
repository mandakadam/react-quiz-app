{"ast":null,"code":"var _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\React\\\\react-quiz-app\\\\src\\\\components\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport quizService from './../api/quizService';\nimport QuestionsBox from './QuestionsBox';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: []\n    };\n\n    this.computeAnswer = (answer, correct) => {\n      if (answer === correctAnswer) {\n        console.log('RIght');\n      } else {\n        console.log('Wrong');\n      }\n    };\n  }\n\n  getQuestions() {\n    quizService().then(questions => {\n      this.setState({\n        questionBank: questions\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.questionBank.length > 0 && this.state.questionBank.map(({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => {\n      return React.createElement(QuestionsBox, {\n        key: questionId,\n        questions: question,\n        options: answers,\n        correct: correct,\n        selected: answer => {\n          this.computeAnswer(answer, correct);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["F:/xampp/htdocs/React/react-quiz-app/src/components/Quiz.js"],"names":["React","Component","quizService","QuestionsBox","Quiz","state","questionBank","computeAnswer","answer","correct","correctAnswer","console","log","getQuestions","then","questions","setState","componentDidMount","render","length","map","question","answers","questionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACJC,MAAAA,YAAY,EAAE;AADV,KADgB;;AAAA,SAWxBC,aAXwB,GAWR,CAACC,MAAD,EAASC,OAAT,KAAoB;AAChC,UAAGD,MAAM,KAAKE,aAAd,EAA4B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OAFD,MAGI;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,KAlBuB;AAAA;;AAIxBC,EAAAA,YAAY,GAAE;AACVX,IAAAA,WAAW,GAAGY,IAAd,CAAmBC,SAAS,IAAG;AAC3B,WAAKC,QAAL,CAAc;AACVV,QAAAA,YAAY,EAAES;AADJ,OAAd;AAGH,KAJD;AAKH;;AASDE,EAAAA,iBAAiB,GAAE;AACf,SAAKJ,YAAL;AACH;;AAEDK,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKb,KAAL,CAAWC,YAAX,CAAwBa,MAAxB,GAAiC,CAAjC,IACA,KAAKd,KAAL,CAAWC,YAAX,CAAwBc,GAAxB,CAA4B,CAAC;AAACC,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBb,MAAAA,OAApB;AAA6Bc,MAAAA;AAA7B,KAAD,KAA4C;AACpE,aAAS,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,UAAnB;AAA+B,QAAA,SAAS,EAAEF,QAA1C;AAAoD,QAAA,OAAO,EAAEC,OAA7D;AAAsE,QAAA,OAAO,EAAEb,OAA/E;AAAwF,QAAA,QAAQ,EAAED,MAAM,IAAE;AAAC,eAAKD,aAAL,CAAmBC,MAAnB,EAA2BC,OAA3B;AAAoC,SAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH,KAFD,CAHR,CADJ;AAUH;;AAlCuB;;AAqC5B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport quizService from './../api/quizService';\r\nimport QuestionsBox from './QuestionsBox';\r\n\r\nclass Quiz extends Component{\r\n    state = {\r\n        questionBank: []\r\n    }\r\n    getQuestions(){\r\n        quizService().then(questions =>{\r\n            this.setState({\r\n                questionBank: questions\r\n            })\r\n        });\r\n    }\r\n    computeAnswer = (answer, correct) =>{\r\n        if(answer === correctAnswer){\r\n            console.log('RIght')\r\n        }\r\n        else{\r\n            console.log('Wrong')\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getQuestions()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {\r\n                    this.state.questionBank.length > 0 &&\r\n                    this.state.questionBank.map(({question, answers, correct, questionId})=>{\r\n                        return ( <QuestionsBox key={questionId} questions={question} options={answers} correct={correct} selected={answer=>{this.computeAnswer(answer, correct)}} /> )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}