{"ast":null,"code":"var _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\React\\\\react-quiz-app\\\\src\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport './assets/style.css';\nimport quizService from './api/quizService';\nimport QuestionBox from './components/QuestionBox';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0,\n      response: 0\n    };\n\n    this.computeScore = (selected, correct) => {\n      if (selected === correct) {\n        console.log('Correct');\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      this.setState({\n        response: this.state.response + 1\n      });\n    };\n  }\n\n  getQuizeService() {\n    quizService().then(resp => {\n      this.setState({\n        questionBank: resp\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getQuizeService();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Your score is \", this.state.score, \" / \", this.state.response, \" \"), this.state.questionBank.map(({\n      question,\n      answers,\n      questionId,\n      correct\n    }) => {\n      return React.createElement(QuestionBox, {\n        question: question,\n        options: answers,\n        key: questionId,\n        saveAnswer: selected => this.computeScore(selected, correct),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["F:/xampp/htdocs/React/react-quiz-app/src/Quiz.js"],"names":["React","Component","quizService","QuestionBox","Quiz","state","questionBank","score","response","computeScore","selected","correct","console","log","setState","getQuizeService","then","resp","componentDidMount","render","map","question","answers","questionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAC,CAFF;AAGJC,MAAAA,QAAQ,EAAC;AAHL,KADgB;;AAAA,SAaxBC,YAbwB,GAaT,CAACC,QAAD,EAAWC,OAAX,KAAsB;AACjC,UAAGD,QAAQ,KAAKC,OAAhB,EAAwB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKC,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAiB;AADd,SAAd;AAGH;;AAED,WAAKO,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,GAAoB;AADpB,OAAd;AAGH,KAxBuB;AAAA;;AAMxBO,EAAAA,eAAe,GAAE;AACbb,IAAAA,WAAW,GAAGc,IAAd,CAAmBC,IAAI,IAAI;AACvB,WAAKH,QAAL,CAAc;AACVR,QAAAA,YAAY,EAAEW;AADJ,OAAd;AAGH,KAJD;AAKH;;AAaDC,EAAAA,iBAAiB,GAAE;AACf,SAAKH,eAAL;AACH;;AACDI,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsC,KAAKd,KAAL,CAAWE,KAAjD,SAA2D,KAAKF,KAAL,CAAWG,QAAtE,MADJ,EAIQ,KAAKH,KAAL,CAAWC,YAAX,CAAwBc,GAAxB,CAA6B,CAAC;AAACC,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,UAApB;AAAgCZ,MAAAA;AAAhC,KAAD,KAA8C;AACvE,aACA,oBAAC,WAAD;AACA,QAAA,QAAQ,EAAEU,QADV;AAEA,QAAA,OAAO,EAAEC,OAFT;AAGA,QAAA,GAAG,EAAEC,UAHL;AAIA,QAAA,UAAU,EAAGb,QAAD,IAAY,KAAKD,YAAL,CAAkBC,QAAlB,EAA4BC,OAA5B,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAOH,KARD,CAJR,CADJ;AAiBH;;AA/CuB;;AAkD5B,eAAeP,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './assets/style.css';\r\nimport quizService from './api/quizService';\r\nimport QuestionBox from './components/QuestionBox';\r\n\r\nclass Quiz extends Component{\r\n    state = {\r\n        questionBank: [],\r\n        score:0,\r\n        response:0\r\n    }\r\n    getQuizeService(){\r\n        quizService().then(resp => {\r\n            this.setState({\r\n                questionBank: resp\r\n            })\r\n        })\r\n    }\r\n    computeScore = (selected, correct) =>{\r\n        if(selected === correct){\r\n            console.log('Correct')\r\n            this.setState({\r\n                score: this.state.score+1\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            response: this.state.response+1\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getQuizeService()\r\n    }\r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"result\">Your score is {this.state.score} / {this.state.response} </h2>\r\n\r\n                {\r\n                    this.state.questionBank.map( ({question, answers, questionId, correct}) => {\r\n                        return(\r\n                        <QuestionBox \r\n                        question={question} \r\n                        options={answers}  \r\n                        key={questionId}\r\n                        saveAnswer={(selected)=>this.computeScore(selected, correct)} \r\n                        />)\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}