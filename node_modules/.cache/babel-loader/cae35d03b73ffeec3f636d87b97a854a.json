{"ast":null,"code":"var _jsxFileName = \"F:\\\\xampp\\\\htdocs\\\\React\\\\react-quiz-app\\\\src\\\\Quiz.js\";\nimport React, { Component } from 'react';\nimport './assets/style.css';\nimport quizService from './api/quizService';\nimport QuestionBox from './components/QuestionBox';\nimport Result from './components/Result';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0,\n      response: 0\n    };\n\n    this.computeScore = (selected, correct) => {\n      if (selected === correct) {\n        console.log('Correct');\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      this.setState({\n        response: this.state.response + 1\n      });\n    };\n  }\n\n  getQuizeService() {\n    quizService().then(resp => {\n      this.setState({\n        questionBank: resp\n      });\n    });\n  }\n\n  restart() {\n    this.getQuizeService();\n    this.setState({\n      score: 0,\n      response: 0\n    });\n  }\n\n  componentDidMount() {\n    this.getQuizeService();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"React Quiz \"), this.state.response === 5 ? React.createElement(Result, {\n      score: this.state.score,\n      response: this.state.response,\n      restart: () => this.restart(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : null, this.state.response < 5 && this.state.questionBank.length && this.state.questionBank.map(({\n      question,\n      answers,\n      questionId,\n      correct\n    }) => {\n      return React.createElement(QuestionBox, {\n        question: question,\n        options: answers,\n        key: questionId,\n        saveAnswer: selected => this.computeScore(selected, correct),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["F:/xampp/htdocs/React/react-quiz-app/src/Quiz.js"],"names":["React","Component","quizService","QuestionBox","Result","Quiz","state","questionBank","score","response","computeScore","selected","correct","console","log","setState","getQuizeService","then","resp","restart","componentDidMount","render","length","map","question","answers","questionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACxBK,KADwB,GAChB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAC,CAFF;AAGJC,MAAAA,QAAQ,EAAC;AAHL,KADgB;;AAAA,SAoBxBC,YApBwB,GAoBT,CAACC,QAAD,EAAWC,OAAX,KAAsB;AACjC,UAAGD,QAAQ,KAAKC,OAAhB,EAAwB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKC,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAiB;AADd,SAAd;AAGH;;AAED,WAAKO,QAAL,CAAc;AACVN,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,GAAoB;AADpB,OAAd;AAGH,KA/BuB;AAAA;;AAMxBO,EAAAA,eAAe,GAAE;AACbd,IAAAA,WAAW,GAAGe,IAAd,CAAmBC,IAAI,IAAI;AACvB,WAAKH,QAAL,CAAc;AACVR,QAAAA,YAAY,EAAEW;AADJ,OAAd;AAGH,KAJD;AAKH;;AACDC,EAAAA,OAAO,GAAE;AACL,SAAKH,eAAL;AACA,SAAKD,QAAL,CAAc;AACVP,MAAAA,KAAK,EAAE,CADG;AAEVC,MAAAA,QAAQ,EAAC;AAFC,KAAd;AAIH;;AAaDW,EAAAA,iBAAiB,GAAE;AACf,SAAKJ,eAAL;AACH;;AACDK,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAIK,KAAKf,KAAL,CAAWG,QAAX,KAAwB,CAAzB,GAA+B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAAtD;AAAiE,MAAA,OAAO,EAAE,MAAI,KAAKU,OAAL,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,GAAiI,IAJrI,EAQS,KAAKb,KAAL,CAAWG,QAAX,GAAsB,CAAvB,IACC,KAAKH,KAAL,CAAWC,YAAX,CAAwBe,MADzB,IAEA,KAAKhB,KAAL,CAAWC,YAAX,CAAwBgB,GAAxB,CAA6B,CAAC;AAACC,MAAAA,QAAD;AAAWC,MAAAA,OAAX;AAAoBC,MAAAA,UAApB;AAAgCd,MAAAA;AAAhC,KAAD,KAA8C;AACvE,aACA,oBAAC,WAAD;AACA,QAAA,QAAQ,EAAEY,QADV;AAEA,QAAA,OAAO,EAAEC,OAFT;AAGA,QAAA,GAAG,EAAEC,UAHL;AAIA,QAAA,UAAU,EAAGf,QAAD,IAAY,KAAKD,YAAL,CAAkBC,QAAlB,EAA4BC,OAA5B,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAOH,KARD,CAVR,CADJ;AAuBH;;AA5DuB;;AA+D5B,eAAeP,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './assets/style.css';\r\nimport quizService from './api/quizService';\r\nimport QuestionBox from './components/QuestionBox';\r\nimport Result from './components/Result';\r\n\r\nclass Quiz extends Component{\r\n    state = {\r\n        questionBank: [],\r\n        score:0,\r\n        response:0\r\n    }\r\n    getQuizeService(){\r\n        quizService().then(resp => {\r\n            this.setState({\r\n                questionBank: resp\r\n            })\r\n        })\r\n    }\r\n    restart(){\r\n        this.getQuizeService()\r\n        this.setState({\r\n            score: 0,\r\n            response:0\r\n        })\r\n    }\r\n    computeScore = (selected, correct) =>{\r\n        if(selected === correct){\r\n            console.log('Correct')\r\n            this.setState({\r\n                score: this.state.score+1\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            response: this.state.response+1\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getQuizeService()\r\n    }\r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"container\">\r\n                <h2 className=\"title\">React Quiz </h2>\r\n               { \r\n               \r\n                (this.state.response === 5)  ? <Result score={this.state.score} response={this.state.response}  restart={()=>this.restart()}/> : null\r\n               }\r\n\r\n                {\r\n                    (this.state.response < 5) &&\r\n                    (this.state.questionBank.length) &&\r\n                    this.state.questionBank.map( ({question, answers, questionId, correct}) => {\r\n                        return(\r\n                        <QuestionBox \r\n                        question={question} \r\n                        options={answers}  \r\n                        key={questionId}\r\n                        saveAnswer={(selected)=>this.computeScore(selected, correct)} \r\n                        />)\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}